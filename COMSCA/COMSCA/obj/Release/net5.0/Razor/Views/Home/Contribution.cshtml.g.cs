#pragma checksum "D:\MY PROJECTS\COMSCA\COMSCA\COMSCA\Views\Home\Contribution.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "75fb7095048373ba048565bebcd08fa28f204146"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Contribution), @"mvc.1.0.view", @"/Views/Home/Contribution.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Contribution.cshtml", typeof(AspNetCore.Views_Home_Contribution))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\MY PROJECTS\COMSCA\COMSCA\COMSCA\Views\_ViewImports.cshtml"
using COMSCA;

#line default
#line hidden
#line 2 "D:\MY PROJECTS\COMSCA\COMSCA\COMSCA\Views\_ViewImports.cshtml"
using COMSCA.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"75fb7095048373ba048565bebcd08fa28f204146", @"/Views/Home/Contribution.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c1e380d3119181dee6a761425a0db5b1bdbc6f04", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Contribution : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<COMSCA.Models.tbl_collection>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form_contribution"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(37, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "D:\MY PROJECTS\COMSCA\COMSCA\COMSCA\Views\Home\Contribution.cshtml"
  
    ViewData["Title"] = "Contribution";

#line default
#line hidden
            BeginContext(87, 1930, true);
            WriteLiteral(@"
<!-- Content Wrapper. Contains page content -->
<div class=""content-wrapper"" style=""padding-top: 60px;"">
    <!-- Content Header (Page header) -->
    <div class=""content-header"">
        <div class=""container-fluid"">
            <div class=""row mb-2"">
                <div class=""col-sm-6"">
                    <h1 class=""m-0"">Contribution</h1>
                </div><!-- /.col -->
                <div class=""col-sm-6"">
                    <ol class=""breadcrumb float-sm-right"">
                        <li class=""breadcrumb-item""><a href=""#"">Home</a></li>
                        <li class=""breadcrumb-item active"">Contribution</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class=""content"">
        <div class=""container-fluid"">
            <div class=""card card-secondary"">
                <div class=""card-header"">
  ");
            WriteLiteral(@"                  <h3 class=""card-title""><i class=""fas fa-edit pr-2""></i>Weekly Contribution</h3>
                </div>

                <div class=""card-body"">
                    <div class=""row"">
                        <div class=""col-md-5"">
                            <div class=""dataTables_wrapper table-responsive dt-bootstrap4"">
                                <table id=""tbl_Payees"" class=""table table-bordered table-hover text-center"" style=""width:100%""></table>
                            </div>
                        </div>
                        <div class=""col-md-7"">
                            <div class=""card card-secondary"">
                                <div class=""card-header"">
                                    <h3 class=""card-title""><i class=""fas fa-edit pr-2""></i>Amounts Payable</h3>
                                </div>
                                ");
            EndContext();
            BeginContext(2017, 5142, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "75fb7095048373ba048565bebcd08fa28f2041466391", async() => {
                BeginContext(2070, 103, true);
                WriteLiteral("\r\n                                    <div class=\"card-body\">\r\n                                        ");
                EndContext();
                BeginContext(2174, 31, false);
#line 48 "D:\MY PROJECTS\COMSCA\COMSCA\COMSCA\Views\Home\Contribution.cshtml"
                                   Write(Html.HiddenFor(x => x.MemberID));

#line default
#line hidden
                EndContext();
                BeginContext(2205, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(2248, 35, false);
#line 49 "D:\MY PROJECTS\COMSCA\COMSCA\COMSCA\Views\Home\Contribution.cshtml"
                                   Write(Html.HiddenFor(x => x.CollectionID));

#line default
#line hidden
                EndContext();
                BeginContext(2283, 4869, true);
                WriteLiteral(@"

                                        <div class=""row"">
                                            <div class=""col-8"">
                                                <div class=""row"">
                                                    <div class=""col-12"">
                                                        <div class=""form-group"">
                                                            <div for=""NoofWeeks"">No. of Weeks</div>
                                                            <input type=""number"" min=""1"" max=""10"" name=""NoofWeeks"" class=""form-control"" id=""NoofWeeks"">
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""row"">
                                                    <div class=""col-12 pb-3"">
                                                        <div for=""AmountPaid"">Contribution</d");
                WriteLiteral(@"iv>
                                                        <div class=""input-group"">
                                                            <div class=""input-group-prepend"">
                                                                <span class=""input-group-text"">â‚±</span>
                                                            </div>
                                                            <input type=""text"" min=""1"" max=""9999999"" name=""AmountPaid"" class=""form-control"" id=""AmountPaid"">
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""row"">
                                                    <div class=""col-12"">
                                                        <div class=""form-group"">
                                                            <div for=""NoofWeeksAbsent"">No. of Weeks Absent<");
                WriteLiteral(@"/div>
                                                            <input type=""number"" min=""0"" max=""10"" name=""NoofWeeksAbsent"" class=""form-control"" id=""NoofWeeksAbsent"">
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""row"">
                                                    <div class=""col-12"">
                                                        <div for=""TotalAmountPaid"">Total Amount Payable</div>
                                                        <div class=""input-group"">
                                                            <div class=""input-group-prepend"">
                                                                <span class=""input-group-text"">â‚±</span>
                                                            </div>
                                                            <input ty");
                WriteLiteral(@"pe=""text"" min=""1"" max=""9999999"" name=""TotalAmountPaid"" class=""form-control"" id=""TotalAmountPaid"" readonly=""readonly"">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-4"">
                                                <div class=""row"">
                                                    <div class=""col-12"">
                                                        <div for=""Change"">Change</div>
                                                        <div class=""input-group"">
                                                            <div class=""input-group-prepend"">
                                                                <span class=""input-group-text"">â‚±</span>
                                                            </div>
                            ");
                WriteLiteral(@"                                <input type=""text"" name=""Change"" class=""form-control"" id=""Change"" placeholder=""0"" readonly=""readonly"">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class=""card-footer"">
                                        <button type=""submit"" class=""btn btn-success float-right"" id=""btn_save_contribution""><i class=""fas fa-save pr-2""></i>Save</button>
                                    </div>
                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7159, 331, true);
            WriteLiteral(@"
                            </div>
                        </div>
                    </div>
                </div>

                <div class=""card-footer"">

                </div>
            </div>
        </div><!--/. container-fluid -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(7509, 8708, true);
                WriteLiteral(@"
    <script>

        $(document).ready(function () {
            var member_id = 0;

            LoadMembers();
            function LoadMembers() {
                $('#tbl_Payees').DataTable({
                    destroy: true,
                    responsive: true,
                    processing: false,
                    search: true,
                    stateSave: true,
                    info: true,
                    searching: true,
                    paging: true,
                    ajax: {
                        ""url"": ""../Membership/LoadMembers"",
                        ""type"": ""POST"",
                        ""datatype"": ""JSON""
                        //""success"": function (data) {
                        //    alert(JSON.stringify(data.data));
                        //}
                    },
                    columns:
                        [
                            { data: ""MemberID"", visible: false, ""orderable"": false },
                            { da");
                WriteLiteral(@"ta: ""FullName"", title: ""Payee's Full Name"", sClass: ""dt-body-center"", orderable: false },
                        ]
                });

                $('#tbl_Payees tbody').off().on('click', 'tr', function (e) {
                    e.preventDefault();
                    if (!$(this).hasClass(""dtactive"")) {
                        $(this).parent().find(""tr"").removeClass(""dtactive"");
                        $(this).addClass(""dtactive"");
                        member_id = SelectedValue(""tbl_Payees"", ""MemberID"");
                        //alert(member_id);
                        $(""[name='MemberID']"").val(member_id);
                    } else {
                        $(this).removeClass(""dtactive"");
                        $(""[name='MemberID']"").val(0);
                    }
                });
            }

            ValidateContirbution();
            function ValidateContirbution() {
                $.validator.setDefaults({
                    submitHandler: function () {
   ");
                WriteLiteral(@"                     var change = $(""[name='Change']"").val();
                        //alert(TotalAmountPaid0 - parseFloat(change));
                        //alert(member_id);
                        if (member_id != 0) {
                            console.log(change);
                            console.log(TotalAmountPaid0);
                            if (change <= TotalAmountPaid0) {
                                if (change >= 0) {
                                    SaveContribution();
                                } else {
                                    Swal.fire(""Warning!"", ""The Amount Paid must be greater than or equal to Total Amount Payable."", ""warning"");
                                }
                            }
                            else {
                                Swal.fire(""Warning!"", ""The amount due must be greater than amount payable."", ""warning"");
                            }
                        } else {
                            Swal.fire(");
                WriteLiteral(@"""Warning!"", ""There is no selected member."", ""warning"");
                        }
                    }
                });
                $('#form_contribution').validate({
                    rules: {
                        NoofWeeks: {
                            required: true
                        },
                        AmountPaid: {
                            required: true
                        },
                    },
                    messages: {
                        NoofWeeks: {
                            required: ""This field is required""
                        },
                        AmountPaid: {
                            required: ""This field is required""
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
           ");
                WriteLiteral(@"         },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                    }
                });
            }

            function SaveContribution() {
                $.ajax({
                    url: ""../Collection/SaveContribution"",
                    type: 'POST',
                    data: ContributionDetails(),
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res.success == true) {
                            Swal.fire({
                                text: ""Successfully saved."",
                                icon: ""success"",
                                showCancelButton: false,
      ");
                WriteLiteral(@"                          confirmButtonColor: '#28a745',
                                confirmButtonText: ""Ok""
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    $(""#form_contribution"").trigger(""reset"");
                                    $(""[name='MemberID']"").val(0);
                                    LoadMembers();
                                }
                            });
                        } else {
                            Swal.fire(""Error!"", res.message, ""error"");
                        }
                    }
                });
            }

            function ContributionDetails() {
                var formData = new FormData();
                formData.append('MemberID', $(""[name='MemberID']"").val());
                formData.append('NoofWeeks', $(""[name='NoofWeeks']"").val());
                formData.append('AmountPaid', $(""[name='AmountPaid']"").val());
          ");
                WriteLiteral(@"      formData.append('NoofWeeksAbsent', $(""[name='NoofWeeksAbsent']"").val());
                return formData;
            }

            var TotalAmountPaid0 = 0;
            var TotalAmountPaid1 = 0;
            var TotalAmountPaid2 = 0;

            $('#NoofWeeks').keyup(function () {
                var AmountPaid = parseFloat($('#AmountPaid').val()) || 0;
                var NoofWeeks = parseFloat($('#NoofWeeks').val()) || 0;
                if (NoofWeeks != 0) {
                    TotalAmountPaid1 = (250 * NoofWeeks);
                    TotalAmountPaid0 = TotalAmountPaid1 + TotalAmountPaid2;
                    $('#TotalAmountPaid').val(TotalAmountPaid0);
                    $('#Change').val((AmountPaid - TotalAmountPaid0));
                    if (NoofWeeks < $('#NoofWeeksAbsent').val()) {
                        Swal.fire(""Warning!"", ""The No. of Weeks must be greater than or equal to No. of Weeks Absent."", ""warning"");
                    }
                } else {
              ");
                WriteLiteral(@"      $('#TotalAmountPaid').val(TotalAmountPaid2);
                    $('#Change').val(0);
                    TotalAmountPaid1 = 0;
                }
            });

            $('#NoofWeeksAbsent').keyup(function () {
                var AmountPaid = parseFloat($('#AmountPaid').val()) || 0;
                var NoofWeeks = parseFloat($('#NoofWeeksAbsent').val()) || 0;
                if (NoofWeeks != 0) {
                    TotalAmountPaid2 = (15 * NoofWeeks);
                    TotalAmountPaid0 = TotalAmountPaid1 + TotalAmountPaid2;
                    $('#TotalAmountPaid').val(TotalAmountPaid0);
                    $('#Change').val((AmountPaid - TotalAmountPaid0));
                    if (NoofWeeks > $('#NoofWeeks').val()) {
                        Swal.fire(""Warning!"", ""The No. of Weeks Absent must be less than or equal to No. of Weeks."", ""warning"");
                    }
                } else {
                    $('#TotalAmountPaid').val(TotalAmountPaid1);
                    $");
                WriteLiteral(@"('#Change').val(0);
                    TotalAmountPaid2 = 0;
                }
            });

            $('#AmountPaid').keyup(function () {
                var AmountPaid = parseFloat($('#AmountPaid').val()) || 0;
                if (AmountPaid != 0) {
                    $('#Change').val((AmountPaid - TotalAmountPaid0));
                } else {
                    $('#Change').val("""");
                }
            });


        });

        ActiveMenu(""#contribution"");
    </script>
");
                EndContext();
            }
            );
            BeginContext(16220, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<COMSCA.Models.tbl_collection> Html { get; private set; }
    }
}
#pragma warning restore 1591
