#pragma checksum "D:\MY PROJECTS\GIT-COMSCA\comsca\COMSCA\COMSCA\Views\FileMaintenance\SetActiveDate.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e5e358766d672b08bed509601040ff5b6b9e3d6c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FileMaintenance_SetActiveDate), @"mvc.1.0.view", @"/Views/FileMaintenance/SetActiveDate.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/FileMaintenance/SetActiveDate.cshtml", typeof(AspNetCore.Views_FileMaintenance_SetActiveDate))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\MY PROJECTS\GIT-COMSCA\comsca\COMSCA\COMSCA\Views\_ViewImports.cshtml"
using COMSCA;

#line default
#line hidden
#line 2 "D:\MY PROJECTS\GIT-COMSCA\comsca\COMSCA\COMSCA\Views\_ViewImports.cshtml"
using COMSCA.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e5e358766d672b08bed509601040ff5b6b9e3d6c", @"/Views/FileMaintenance/SetActiveDate.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c1e380d3119181dee6a761425a0db5b1bdbc6f04", @"/Views/_ViewImports.cshtml")]
    public class Views_FileMaintenance_SetActiveDate : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\MY PROJECTS\GIT-COMSCA\comsca\COMSCA\COMSCA\Views\FileMaintenance\SetActiveDate.cshtml"
  
    ViewData["Title"] = "Active Date";

#line default
#line hidden
            BeginContext(49, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(52, 30, false);
#line 6 "D:\MY PROJECTS\GIT-COMSCA\comsca\COMSCA\COMSCA\Views\FileMaintenance\SetActiveDate.cshtml"
Write(Html.Partial("_AddActiveDate"));

#line default
#line hidden
            EndContext();
            BeginContext(82, 2069, true);
            WriteLiteral(@"

<!-- Content Wrapper. Contains page content -->
<div class=""content-wrapper"" style=""padding-top: 60px;"">
    <!-- Content Header (Page header) -->
    <div class=""content-header"">
        <div class=""container-fluid"">
            <div class=""row mb-2"">
                <div class=""col-sm-6"">
                    <h1 class=""m-0"">Active Date</h1>
                </div><!-- /.col -->
                <div class=""col-sm-6"">
                    <ol class=""breadcrumb float-sm-right"">
                        <li class=""breadcrumb-item""><a href=""#"">Home</a></li>
                        <li class=""breadcrumb-item active"">Set Active Date</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class=""content"">
        <div class=""container-fluid"">
            <div class=""card card-secondary"">
                <div class=""card-header"">");
            WriteLiteral(@"
                    <h3 class=""card-title""><i class=""fa fa-calendar pr-2""></i>Set Active Date</h3>
                </div>

                <div class=""card-body"">
                    <div class=""row pl-2"">
                        <button type=""button"" class=""btn btn-success"" id=""btn_set_date""><i class=""fa fa-plus mr-2""></i>Add Start Date</button>
                    </div>
                    <div class=""row pb-3 pt-3"">
                        <div class=""col-md-12"">
                            <div class=""dataTables_wrapper table-responsive dt-bootstrap4"">
                                <table id=""tbl_ActiveDates"" class=""table table-bordered table-hover text-center"" style=""width:100%""></table>
                            </div>
                        </div>
                    </div>
                </div>

                <div class=""card-footer"">
                </div>
            </div>
        </div><!--/. container-fluid -->
    </section>
    <!-- /.content -->
</div>
<!-- /.");
            WriteLiteral("content-wrapper -->\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2170, 10436, true);
                WriteLiteral(@"
    <script>
        $(document).ready(function () {

            var activeDate_id = 0;

            LoadActiveDates();
            function LoadActiveDates() {
                $('#tbl_ActiveDates').DataTable({
                    destroy: true,
                    responsive: true,
                    processing: false,
                    search: true,
                    stateSave: true,
                    info: true,
                    searching: true,
                    paging: true,
                    order: [[1, ""asc""], [2, ""asc""]],
                    lengthMenu: [[5, 10, 20, -1], [5, 10, 20, ""All""]],
                    ajax: {
                        ""url"": ""../FileMaintenance/LoadActiveDates"",
                        ""type"": ""POST"",
                        ""datatype"": ""JSON""
                        //""success"": function (data) {
                        //    alert(JSON.stringify(data.data));
                        //}
                    },
                    colu");
                WriteLiteral(@"mns:
                        [
                            //{ data: ""ActiveDateID"", visible: false, ""orderable"": false },
                            { data: ""WeekNumber"", title: ""Week Number"", sClass: ""dt-body-left"", orderable: true },
                            { data: ""ActiveDate"", title: ""Due Date"", sClass: ""dt-body-center"", orderable: false },
                            //{ data: ""IsActive"", title: ""Is Active"", sClass: ""dt-body-center"", orderable: false },
                            {
                                data: ""IsActive"", title: ""Is Active"", sClass: ""dt-body-center"", render: function (data) {
                                    if (data == true) {
                                        return ""<span class='badge bg-primary'>Active</span>""
                                    } else {
                                        return ""<span class='badge bg-danger'>Inactive</span>""
                                    }
                                }
                           ");
                WriteLiteral(@" },
                            {
                                data: ""ActiveDateID"", title: ""Action"", render: function (data) {
                                    return ""<div class='row justify-content-center'>"" +
                                        ""<div class='dropdown dropleft'>"" +
                                        ""<button id='btnbars' type='button' class='btn btn-sm btn-success btnbars' data-toggle='dropdown'>"" +
                                        ""<i class='fa fa-bars'></i>"" +
                                        ""</button> <div class='dropdown-menu'>"" +
                                        ""<div class='container fluid'> "" +
                                        ""<a id='btnUpdate' class='btn btn-warning btn-sm fa fa-edit col-sm-12' style='margin-bottom: 3px; margin-top: 3px;'>"" +
                                        ""&nbspActivate</a>"" +
                                        ""<br />"" +
                                        ""<a id='btnDelete' class='btn btn-");
                WriteLiteral(@"danger btn-sm fa fa-edit col-sm-12' style='margin-bottom: 3px; margin-top: 3px; color: white;'>"" +
                                        ""&nbspDelete</a>"" +
                                        ""</div></div></div ></div>"";
                                }
                            }
                        ]
                });

                $('#tbl_ActiveDates tbody').off().on('click', 'tr', function (e) {
                    if ($(e.target).is(""[id^=btnUpdate],[id^=btnUpdate] i"")) {
                        SetAsActive();
                    }
                    else if ($(e.target).is(""[id^=btnDelete],[id^=btnDelete] i"")) {
                        RemoveActiveDate();
                    }
                    else if (!$(e.target).is(""[id^=btnbars],[id^=btnbars] i"")) {
                        if (!$(this).hasClass(""dtactive"")) {
                            $(this).parent().find(""tr"").removeClass(""dtactive"");
                            $(this).addClass(""dtactive"");
            ");
                WriteLiteral(@"                activeDate_id = SelectedValue(""tbl_ActiveDates"", ""ActiveDateID"");
                            $(""[name='ActiveDateID']"").val(activeDate_id);
                        } else {
                            $(this).removeClass(""dtactive"");
                            $(""[name='ActiveDateID']"").val(0);
                            $(""#form_activedate"").trigger(""reset"");
                        }
                    }
                });
            }

            function SetAsActive() {
                if ($(""[name='ActiveDateID']"").val() != 0) {
                    $.ajax({
                        url: ""../FileMaintenance/SetAsActive?ActiveDateID= "" + $(""[name='ActiveDateID']"").val(),
                        type: ""POST"",
                        success: function (res) {
                            if (res.success) {
                                LoadActiveDates();
                            }
                        }
                    });
                }
            ");
                WriteLiteral(@"    else {
                    Swal.fire('Information!', 'Please select a record first.', 'info');
                }
            }

            function RemoveActiveDate() {
                if ($(""[name='ActiveDateID']"").val() != 0) {
                    Swal.fire({
                        text: ""Are you sure you want to delete this record?"",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#28a745',
                        cancelButtonColor: '#dc3545',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '../FileMaintenance/RemoveActiveDate?&ActiveDateID=' + $(""[name='ActiveDateID']"").val(),
                                type: 'POST',
                                success: function (res) {
                                    if (r");
                WriteLiteral(@"es.success == true) {
                                        Swal.fire('Success!', 'Record has been deleted.', 'success');
                                        LoadActiveDates();
                                        $(""[name='ActiveDateID']"").val(0);
                                    } else {
                                        Swal.fire('Error!', res.msg, 'error');
                                    }
                                }
                            });
                        }
                    });
                }
                else {
                    Swal.fire('Information!', 'Please select a record first.', 'info');
                }
            }

            $(""#btn_generate_dates"").click(function (e) {
                e.preventDefault();
                SaveActiveDates();
            });

            $(""#btn_set_date"").click(function (e) {
                e.preventDefault();
                SetNewActiveDates();
            });

           ");
                WriteLiteral(@" function SetNewActiveDates() {
                $(""#form_activedate"").trigger(""reset"");
                $(""#modal_add_active_date"").modal(""show"");
            }

            function SaveActiveDates() {
                $.ajax({
                    url: ""../FileMaintenance/SaveActiveDates"",
                    type: 'POST',
                    data: ActiveDateDetails(),
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res.success == true) {
                            Swal.fire({
                                text: ""Successfully saved."",
                                icon: ""success"",
                                showCancelButton: false,
                                confirmButtonColor: '#28a745',
                                confirmButtonText: ""Ok""
                            }).then((result) => {
                                if (result.");
                WriteLiteral(@"isConfirmed) {
                                    $(""#form_activedate"").trigger(""reset"");
                                    LoadActiveDates();
                                    $(""[name='ActiveDateID']"").val(0);
                                }
                            });
                        } else {
                            Swal.fire(""Warning!"", res.message, ""warning"");
                        }
                    }
                });
            }

            ValidateActiveDate();
            function ValidateActiveDate() {
                $.validator.setDefaults({
                    submitHandler: function () {
                        SaveActiveDates();
                    }
                });
                $('#form_activedate').validate({
                    rules: {
                        ActiveDate: {
                            required: true
                        },
                    },
                    messages: {
                        Acti");
                WriteLiteral(@"veDate: {
                            required: ""This field is required""
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                        console.log(element);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                        console.log(element);
                    }
                });
            }

            function ActiveDateDetails() {
                var formData = new FormData();
                formData.append('ActiveDateID', $(""[name='ActiveDateID']"").val());");
                WriteLiteral("\n                formData.append(\'StartDate\', $(\"[name=\'StartDate\']\").val());\r\n                return formData;\r\n            }\r\n\r\n        });\r\n\r\n        ActiveMenu(\"#activedate\");\r\n    </script>\r\n");
                EndContext();
            }
            );
            BeginContext(12609, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
